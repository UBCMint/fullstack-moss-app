services:
  # Database Service
  db:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb_app
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my_secure_password_123 # REPLACE WITH STRONGER PASSWORD IN FUTURE
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-server:
    build:
      context: ./backend
      dockerfile: api-server/Dockerfile
    container_name: api_server
    ports:
      - "9000:9000"
    environment:
      RUST_LOG: info
      DATABASE_URL: postgres://postgres:my_secure_password_123@db:5432/postgres
      API_HOST: 0.0.0.0
      API_PORT: 9000
    command: ["./api-server"]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    develop:
      watch:
        - action: rebuild
          path: ./backend/api-server/src
        - action: rebuild
          path: ./backend/shared-logic/src
        - action: rebuild
          path: ./backend/api-server/python

  websocket-server:
    build:
      context: ./backend
      dockerfile: websocket-server/Dockerfile
    container_name: websocket_server
    ports:
      - "8080:8080"
    environment:
      # If want websocket logs:
      RUST_LOG: info
      DATABASE_URL: postgres://postgres:my_secure_password_123@db:5432/postgres
      WS_HOST: 0.0.0.0 
      WS_PORT: 8080
    command: ["./websocket-server"]
    depends_on:
      db:
        condition: service_healthy
      api-server:
        condition: service_started
    restart: on-failure
    develop:
      watch:
        - action: rebuild
          path: ./backend/websocket-server/src
        - action: rebuild
          path: ./backend/shared-logic/src

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_app
    ports:
      - "3000:3000"
    depends_on:
      - api-server
      - websocket-server
    environment:
      VITE_API_URL: http://localhost:9000
      VITE_WS_URL: ws://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
            - .git/

volumes:
  timescale_data:
